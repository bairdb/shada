#!/usr/bin/env ruby

if File.exists?('/home/admin/base/site/')
  ENV['CONFIG'] = "main"
  ENV['ROOT'] = '/home/admin/base/site/'
else
  ENV['CONFIG'] = "local"
  ENV['ROOT'] = '/Users/bairdlackner-buckingham/projects/Reelfinatics/dev/lib/site/'
end

require "shada"

Shada::Config.load_config "#{ENV['ROOT']}config/#{ENV['CONFIG']}.yml"

Shada::CLI.cli do
  
	task :generate do |args|
	  args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
    #puts "#{name} - #{Shada::Config["ApplicationPath"]}"
    unless name.nil?
      generator = Shada::Generator.new name, Shada::Config["ApplicationPath"]
      generator.generate
    end
	end
	
	task :generate_model do |args|
	  args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
	  #puts "#{name} - #{Shada::Config["ApplicationPath"]}"
    unless name.nil?
      generator = Shada::Generator.new name, Shada::Config["ApplicationPath"]
      generator.generate_model
    end
	end
	
	task :generate_controller do |args|
	  args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
	  #puts "#{name} - #{Shada::Config["ApplicationPath"]}"
		unless name.nil?
		  generator = Shada::Generator.new name, Shada::Config["ApplicationPath"]
      generator.generate_controller
    end
	end
	
	task :remove do |args|
	  args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
    unless name.nil?
      generator = Shada::Generator.new name, Shada::Config["ApplicationPath"]
      generator.remove
    end
  end
  
  task :remove_controller do |args|
	  args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
    unless name.nil?
      generator = Shada::Generator.new name, Shada::Config["ApplicationPath"]
      generator.remove_controller
    end
  end
  
  task :remove_model do |args|
	  args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
    unless name.nil?
      generator = Shada::Generator.new name, Shada::Config["ApplicationPath"] 
      generator.remove_model
    end
  end
	
	task :start do |args|
	  puts "Starting Shada"
	  is_running = `ps aux | grep mongrel2`
	  `cd ~/base/site; ruby run.rb start`
    `cd ~/base/site; ruby run_monitor.rb start`
    `cd ~/base/site; ruby run_upload.rb start`
    `cd ~/base/site; ruby run_secure.rb start`
  end
  
  task :stop do |args|
    puts "Stopping Shada"
    `cd ~/base/site; ruby run.rb stop`
    `cd ~/base/site; ruby run_monitor.rb stop`
    `cd ~/base/site; ruby run_upload.rb stop`
    `cd ~/base/site; ruby run_secure.rb stop`
  end
	
	task :create_table do |args|
	  args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
    db = args[1] || Shada::Config['MySQLDB_Default']
    
    Shada::Data::Core.connect :database => db, :dont_setup => true
    Shada::Data::Core.create name.downcase
  end
  
  task :rename_table do |args|
    args = args[:dict]
	  name = args[:name]
	  new_name = args[:new_name]
	  db = args[:database] || Shada::Config['MySQLDB_Default']
	  
	  puts "Creating Column: #{name} - #{new_name}"
	  
	  Shada::Data::Core.connect :database => db, :dont_setup => true
	  Shada::Data::Core.rename_table name, new_name
  end
  
  task :destroy_table do |args|
    args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
    db = args[1] || Shada::Config['MySQLDB_Default']
    
    Shada::Data::Core.connect :database => db, :dont_setup => true
    Shada::Data::Core.destroy_table name.downcase
  end
  
  task :create_column do |args|
    args = args[:dict]
	  table = args[:table]
	  name = args[:column_name] || args[:name]
	  type = args[:type] || 'varchar'
	  len = args[:len] || "255"
	  db = args[:database] || Shada::Config['MySQLDB_Default']
	  
	  puts "Creating Column: #{name} - #{type} - #{len}"
	  
	  Shada::Data::Core.connect :database => db, :dont_setup => true
	  Shada::Data::Core.create_row :table => table, :name => name, :type => type, :length => len
	end
  
  task :alter_column do |args|
    args = args[:dict]
    table = args[:table]
    name = args[:column_name] || args[:name]
    type = args[:type] || 'varchar'
    len = args[:len] || "255"
    db = args[:database] || Shada::Config['MySQLDB_Default']
  
    puts "Altering Column: #{name} - #{type}"
  
    Shada::Data::Core.connect :database => db, :dont_setup => true
    Shada::Data::Core.alter_row :table => table, :name => name, :type => type, :length => len
  end
  
  task :drop_column do |args|
    args = args[:dict]
    table = args[:table]
    name = args[:column_name] || args[:name]
    db = args[:database] || Shada::Config['MySQLDB_Default']
    
    puts "Droping Column: #{name}"
  
    Shada::Data::Core.connect :database => db, :dont_setup => true
    Shada::Data::Core.drop_row :table => table, :name => name
  end
  
  task :change_column do |args|
    args = args[:dict]
    table = args[:table]
    name = args[:column_name] || args[:name]
    new_name = args[:new_column_name] || args[:new_name]
    type = args[:type] || 'varchar'
    len = args[:len] || "255"
    db = args[:database] || Shada::Config['MySQLDB_Default']
    
    puts "Changing Column: #{name} to #{new_name}"
  
    Shada::Data::Core.connect :database => db, :dont_setup => true
    Shada::Data::Core.rename_row :table => table, :name => name, :new_name => new_name, :type => type, :length => len
  end
  
  task :update do |args|
    `git pull`
    `rake build_gem`
    `sudo install bin/shada /usr/bin/shada`
  end
  
  task :help do |args|
    puts "Shada CLI v1"
    puts "Copyright (c) 2011 Lackner//Buckingham LLC. All rights reserved."
    puts "Usage: shada [OPTIONS] [ARGS:ARG] || [ARG]"
    puts "- generate  Generate Model Controller and Database Table"
    puts "- generate_model  Generate Model and Database Table"
    puts "- generate_controller Generate Controller"
    puts "- remove Remove Model Controller and Table"
    puts "- remove_model  Remove Model and Table"
    puts "- remove_controller Remove Controller"
    puts "- start Start Server"
    puts "- stop  Stop Server"
    puts "- create_table  Create Table in Database"
    puts "- create_column Create Column for Table in Database"
  end
	
end

