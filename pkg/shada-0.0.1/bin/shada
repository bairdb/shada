#!/usr/bin/ruby

ENV['CONFIG'] = "main"
ENV['ROOT'] = '/home/admin/base/site/'

require "shada"

Shada::Config.load_config "#{ENV['ROOT']}config/#{ENV['CONFIG']}.yml"

Shada::CLI.cli do
  
	task :generate do |args|
	  args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
    #puts "#{name} - #{Shada::Config["ApplicationPath"]}"
    unless name.nil?
      generator = Shada::Generator.new name, Shada::Config["ApplicationPath"]
      generator.generate
    end
	end
	
	task :generate_model do |args|
	  args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
	  #puts "#{name} - #{Shada::Config["ApplicationPath"]}"
    unless name.nil?
      generator = Shada::Generator.new name, Shada::Config["ApplicationPath"]
      generator.generate_model
    end
	end
	
	task :generate_controller do |args|
	  args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
	  #puts "#{name} - #{Shada::Config["ApplicationPath"]}"
		unless name.nil?
		  generator = Shada::Generator.new name, Shada::Config["ApplicationPath"]
      generator.generate_controller
    end
	end
	
	task :remove do |args|
	  args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
    unless name.nil?
      generator = Shada::Generator.new name, Shada::Config["ApplicationPath"]
      generator.remove
    end
  end
  
  task :remove_controller do |args|
	  args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
    unless name.nil?
      generator = Shada::Generator.new name, Shada::Config["ApplicationPath"]
      generator.remove_controller
    end
  end
  
  task :remove_model do |args|
	  args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
    unless name.nil?
      generator = Shada::Generator.new name, Shada::Config["ApplicationPath"] 
      generator.remove_model
    end
  end
	
	task :start do |args|
  end
  
  task :stop do |args|
  end
	
	task :create_table do |args|
	  args = args[:dict].count > 0 ? args[:dict] : args[:arr]
    name = args[0] || args[:name]
    db = args[1] || Shada::Config['MySQLDB_Default']
    
    Shada::Data::Core.connect :database => db, :dont_setup => true
    Shada::Data::Core.create name.downcase
  end
  
  task :create_column do |args|
    args = args[:dict]
	  table = args[:table]
	  name = args[:column_name]
	  type = args[:type] || 'varchar'
	  len = args[:len] || ""
	  db = args[:database] || Shada::Config['MySQLDB_Default']
	  
	  puts "Creating Column: #{name} - #{type} - #{len}"
	  
	  Shada::Data::Core.connect :database => db, :dont_setup => true
	  Shada::Data::Core.create_row :table => table, :name => name, :type => type, :length => len
	end
  
  task :help do |args|
    puts "Shada CLI"
    puts "Usage:"
    puts "- generate"
    puts "- generate_model"
    puts "- generate_controller"
    puts "- remove"
    puts "- remove_model"
    puts "- remove_controller"
    puts "- start"
    puts "- stop"
    puts "- create_table"
    puts "- create_column"
  end
	
end

